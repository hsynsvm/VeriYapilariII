@startuml StaticArray
title StaticArray

namespace DataStructures.Array.Contracts{
    interface IArray<T>{
        +Length:int
        +GetItem(index:int):T
        SetItem(index:int, value:T):void
    }

    interface IDynamicArray<T> {
    + Count: int
    + Capacity: int
    + Add(value:T):void
    + RemoveAt(position: int): T
    + Swap(position1: int, position2: int): void

}
}

namespace DataStructures.Array{
    class StaticArray<T>{
         #_innerArray:T[]
        +StaticArray()
        +StaticArray(collection: IEnumerable<T>)
        +Length:int
        +GetEnumerator():IEnumerator
        +GetItem(index:int):T
        +SetItem(index:int, value:T):void
        #CheckIndex(index:int):void
    }

    class Array<T>{
        - index:int
        + Count:int
        + Capacity:int
        + Add(value:T):boid
        + RemoveAt(position:int):T
        + Swap(p1:int, p2:int):void
        - CheckDoubleArray():void
        - ShrinkArray():void
    }
}

hide empty members

DataStructures.Array.StaticArray -.up.|> DataStructures.Array.Contracts.IArray : "implements"
DataStructures.Array.Array -.up.|> DataStructures.Array.StaticArray : "extends"
DataStructures.Array.Array -.up.|> DataStructures.Array.Contracts.IDynamicArray : "implements"
@enduml